@use "sass:color";

@for $i from 0 through 20 {
  .from-#{$i*5}\% {
    --tw-gradient-from-position: #{$i * 5%};
  }
  .to-#{$i*5}\% {
    --tw-gradient-to-position: #{$i * 5%};
  }
}

$gradient-color-map: (
  "transparent": transparent,
  "black": #000,
  "white": #fff,
);

.from-inherit {
  --tw-gradient-from: inherit var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(255 255 255 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}
.from-current {
  --tw-gradient-from: currentColor var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(255 255 255 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

@each $key, $value in $gradient-color-map {
  .from-#{$key} {
    --tw-gradient-from: #{$value} var(--tw-gradient-from-position);
    --tw-gradient-to: #{color.change($value, $alpha: 0)}
      var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
  }
}

.to-inherit {
  --tw-gradient-to: inherit var(--tw-gradient-to-position);
}
.to-current {
  --tw-gradient-to: currentColor var(--tw-gradient-to-position);
}

@each $key, $value in $gradient-color-map {
  .to-#{$key} {
    --tw-gradient-to: #{$value} var(--tw-gradient-to-position);
  }
}

// TODO: More colors
